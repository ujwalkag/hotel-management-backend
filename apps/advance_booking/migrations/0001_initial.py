# Generated by Django 4.2.7 on 2025-09-29 09:12

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdvanceBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(help_text="Customer's full name", max_length=100)),
                ('customer_phone', models.CharField(help_text="Customer's contact phone number", max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('customer_aadhar', models.CharField(blank=True, help_text="Customer's Aadhar number (optional)", max_length=12, null=True, validators=[django.core.validators.RegexValidator(message='Aadhar number must be 12 digits.', regex='^\\d{12}$')])),
                ('customer_address', models.TextField(blank=True, help_text="Customer's address (optional)", null=True)),
                ('booking_date', models.DateField(help_text='Date of the booking')),
                ('booking_time', models.TimeField(help_text='Time of the booking')),
                ('party_size', models.IntegerField(help_text='Number of people in the party', validators=[django.core.validators.MinValueValidator(1)])),
                ('booking_notes', models.TextField(blank=True, help_text='Special requests, dietary restrictions, celebration details, etc.', null=True)),
                ('total_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total amount for the booking', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('advance_paid', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Advance amount paid', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('remaining_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Remaining amount to be paid', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('status', models.CharField(choices=[('confirmed', 'Confirmed'), ('pending', 'Pending'), ('cancelled', 'Cancelled'), ('completed', 'Completed')], default='confirmed', help_text='Current status of the booking', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(help_text='Admin user who created this booking', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Advance Booking',
                'verbose_name_plural': 'Advance Bookings',
                'db_table': 'advance_booking',
                'ordering': ['booking_date', 'booking_time'],
            },
        ),
        migrations.CreateModel(
            name='BookingStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_status', models.CharField(max_length=20)),
                ('new_status', models.CharField(max_length=20)),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
                ('reason', models.TextField(blank=True, null=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='advance_booking.advancebooking')),
                ('changed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Booking Status History',
                'verbose_name_plural': 'Booking Status Histories',
                'ordering': ['-changed_at'],
            },
        ),
        migrations.CreateModel(
            name='BookingPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('card', 'Credit/Debit Card'), ('upi', 'UPI'), ('online', 'Online Transfer'), ('cheque', 'Cheque')], default='cash', max_length=20)),
                ('transaction_reference', models.CharField(blank=True, help_text='Transaction ID, cheque number, etc.', max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='advance_booking.advancebooking')),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Booking Payment',
                'verbose_name_plural': 'Booking Payments',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.AddIndex(
            model_name='advancebooking',
            index=models.Index(fields=['booking_date'], name='advance_boo_booking_dc7b99_idx'),
        ),
        migrations.AddIndex(
            model_name='advancebooking',
            index=models.Index(fields=['customer_phone'], name='advance_boo_custome_7da87d_idx'),
        ),
        migrations.AddIndex(
            model_name='advancebooking',
            index=models.Index(fields=['status'], name='advance_boo_status_b0745d_idx'),
        ),
        migrations.AddIndex(
            model_name='advancebooking',
            index=models.Index(fields=['created_at'], name='advance_boo_created_b3b8bf_idx'),
        ),
    ]
